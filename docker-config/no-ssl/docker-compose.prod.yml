services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    restart: always
    depends_on:
      - db
  db:
    image: postgres:14
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    redis:
      image: redis:lastest
      container_name: redis
      restart: always
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
      
    celery:
      build:
        context: .
        dockerfile: Dockerfile.prod
      container_name: celery
      command: celery -A config worker -l info
      env_file:
        - .env
      environment:
        - DJANGO_SETTINGS_MODULE=config.settings
      volumes:
        - .:/app/
      depends_on:
        - backend
        - redis
      restart: always

    celery-beat:
      build:
        context: .
        dockerfile: Dockerfile.prod
      container_name: celery-beat
      command: celery -A config beat -l info
      env_file:
        - .env
      environment:
        - DJANGO_SETTINGS_MODULE=config.settings
      volumes:
        - .:/app/
      depends_on:
        - backend
        - redis
      restart: always

    nginx:
      build:
        context: .
        dockerfile: Dockerfile.prod
      container_name: nginx
      restart: always
      ports:
        - "80:80"
      volumes:
        - static_volume:/app/staticfiles
        - media_volume:/app/media
      depends_on:
        - backend

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
      